#:kivy 1.0

WindowManager:

<MainWindow>:
    name: "main_window"

<SecondWindow>:
    name: "second_window" 

<MainPanel>:

    image: image
    drawing_field: drawing_field

    BoxLayout:
        orientation: 'horizontal'
        

        DrawingField:
            selection: selection
            id: drawing_field

            size_hint: None, None
            size:  root.width * 0.7, root.height

            canvas.before:
                Color:
                    #rgba: 0.109, 0.949, 0.835, 0.8
                    rgba: 0, 0, 0, 1
                Rectangle:
                    size:  root.width * 0.7, root.height


            Image:
                id: image
                size_hint: None, None
                size: root.width * 0.7 * 0.8, root.height * 0.8
                pos: root.width * 0.7 * 0.1, root.height * 0.1

            LineRectangle:
                id: selection
                pos: root.width * 0.7 * 0.5 - 50, root.height * 0.5 - 50
                
                size: (100, 100)     
                  
        RelativeLayout:
            size_hint: None, None
            size:  root.width * 0.3, root.height

            canvas.before:
                Color:
                    rgba: 0.066, 0.674, 0.592, 0.8

                Rectangle:
                    size:  root.width * 0.35, root.height

            MyButton:
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .1}
                text: "Submit"

                
                on_release:
                    app.root.main_to_second()


            MyButton:
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .7}
                text: "Load image"

                on_release: 
                    on_release: root.load()
            
            MyButton:
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .55}
                text: "Crop image"


                on_release: 
                    on_release: root.crop()
                


<LineRectangle>:
    canvas.after:
        Color:
            #rgba: 0.49, 0.49, 0.49, 1
            rgba: 1, 0, 0, 1
        Line:
            width: 1.75
            rectangle: (self.x, self.y, self.width, self.height)


<SecondPanel>:
    plot_field: plot_field
    slider: slider

    BoxLayout:
        orientation: 'horizontal'
        

        BoxLayout:
            id: plot_field

            size_hint: None, None
            size:  root.width * 0.7, root.height
     
                  
        RelativeLayout:
            size_hint: None, None
            size:  root.width * 0.3, root.height

            canvas.before:
                Color:
                    rgba: 0.066, 0.674, 0.592, 0.8
                Rectangle:
                    size:  root.width * 0.35, root.height

            Label:
                text: "Filter threshold"
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .55}

            Slider:
                id: slider
                size_hint: 1, 0.1
                pos_hint: {'center_x': .5, 'center_y': .5}
                min: 0
                max: 200
                value: 110
                on_value: root.filter_and_plot(root.pil_image, self.value)
            
            Label:
                id: slider_value
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .45}
                text: str(round(slider.value))


            MyButton:
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .2}
                text: "Go back"
                
                on_release: 
                    app.root.current = "main_window"
                    app.root.transition.direction = 'right'

            MyButton:
                size_hint: 0.7, 0.1
                pos_hint: {'center_x': .5, 'center_y': .1}
                text: "Analyze"
                
                on_release: root.analyze()

<MyButton@Button>:
    size: self.size
    pos: self.pos
    text: self.text

    #color: 1, 1, 1, 1
    #background_color: 0.427, 0.435, 0.431, 1
    #background_normal: ' '

<MyPopup>:
    result_label: result_label
    auto_dismiss: False

    title: "Analysis" 
    size_hint: (None, None) 
    size: (400, 300)
    #separator_height: 1
    FloatLayout:
        Label:
            text:" Your result: "
            size_hint: 0.6, 0.2
            pos_hint: {'center_x': .5, 'center_y': .8}

        Label:
            id: result_label
            text:""
            size_hint: 0.6, 0.2
            pos_hint: {'center_x': .5, 'center_y': .7}

        Button:
            text: "Continue"
            size_hint: 0.8, 0.2
            pos_hint: {'center_x': .5, 'center_y': .2}
            on_release: root.dismiss()
